name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: |
        echo "Available Xcode installations:"
        ls -la /Applications/ | grep -i xcode || echo "No Xcode found with ls"
        find /Applications -name "Xcode*.app" -maxdepth 1 | sort || echo "No Xcode found with find"
        
        # Try common Xcode paths in order of preference
        if [ -d "/Applications/Xcode.app" ]; then
          echo "Using default Xcode.app"
          sudo xcode-select -switch /Applications/Xcode.app
        elif [ -d "/Applications/Xcode_15.4.app" ]; then
          echo "Using Xcode_15.4.app"
          sudo xcode-select -switch /Applications/Xcode_15.4.app
        elif [ -d "/Applications/Xcode_15.3.app" ]; then
          echo "Using Xcode_15.3.app"
          sudo xcode-select -switch /Applications/Xcode_15.3.app
        elif [ -d "/Applications/Xcode_15.2.app" ]; then
          echo "Using Xcode_15.2.app"
          sudo xcode-select -switch /Applications/Xcode_15.2.app
        elif [ -d "/Applications/Xcode_14.3.app" ]; then
          echo "Using Xcode_14.3.app"
          sudo xcode-select -switch /Applications/Xcode_14.3.app
        else
          # Find any available Xcode and use it
          XCODE_PATH=$(find /Applications -name "Xcode*.app" -maxdepth 1 | head -1)
          if [ -n "$XCODE_PATH" ]; then
            echo "Using found Xcode: $XCODE_PATH"
            sudo xcode-select -switch "$XCODE_PATH"
          else
            echo "ERROR: No Xcode installation found!"
            exit 1
          fi
        fi
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Build and Test
      run: |
        swift build
        swift test